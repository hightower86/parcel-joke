{"id":"node_modules/postcss/lib/processor.js","dependencies":[{"name":"/Users/macbook/Desktop/KODING/Traversy-Media/parcel/parsel-joke/package.json","includedInParent":true,"mtime":1565716104892},{"name":"/Users/macbook/Desktop/KODING/Traversy-Media/parcel/parsel-joke/node_modules/postcss/package.json","includedInParent":true,"mtime":1558416471631},{"name":"./lazy-result","loc":{"line":7,"column":26},"parent":"/Users/macbook/Desktop/KODING/Traversy-Media/parcel/parsel-joke/node_modules/postcss/lib/processor.js","resolved":"/Users/macbook/Desktop/KODING/Traversy-Media/parcel/parsel-joke/node_modules/postcss/lib/lazy-result.js"}],"generated":{"js":"'use strict';\n\nfunction _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function (obj) { return typeof obj; }; } else { _typeof2 = function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n  return _typeof2(obj);\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n};\n\nvar _lazyResult = require('./lazy-result');\n\nvar _lazyResult2 = _interopRequireDefault(_lazyResult);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * Contains plugins to process CSS. Create one `Processor` instance,\n * initialize its plugins, and then use that instance on numerous CSS files.\n *\n * @example\n * const processor = postcss([autoprefixer, precss]);\n * processor.process(css1).then(result => console.log(result.css));\n * processor.process(css2).then(result => console.log(result.css));\n */\n\n\nvar Processor = function () {\n  /**\n   * @param {Array.<Plugin|pluginFunction>|Processor} plugins - PostCSS\n   *        plugins. See {@link Processor#use} for plugin format.\n   */\n  function Processor() {\n    var plugins = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, Processor);\n    /**\n     * @member {string} - Current PostCSS version.\n     *\n     * @example\n     * if ( result.processor.version.split('.')[0] !== '6' ) {\n     *   throw new Error('This plugin works only with PostCSS 6');\n     * }\n     */\n\n\n    this.version = '6.0.23';\n    /**\n     * @member {pluginFunction[]} - Plugins added to this processor.\n     *\n     * @example\n     * const processor = postcss([autoprefixer, precss]);\n     * processor.plugins.length //=> 2\n     */\n\n    this.plugins = this.normalize(plugins);\n  }\n  /**\n   * Adds a plugin to be used as a CSS processor.\n   *\n   * PostCSS plugin can be in 4 formats:\n   * * A plugin created by {@link postcss.plugin} method.\n   * * A function. PostCSS will pass the function a @{link Root}\n   *   as the first argument and current {@link Result} instance\n   *   as the second.\n   * * An object with a `postcss` method. PostCSS will use that method\n   *   as described in #2.\n   * * Another {@link Processor} instance. PostCSS will copy plugins\n   *   from that instance into this one.\n   *\n   * Plugins can also be added by passing them as arguments when creating\n   * a `postcss` instance (see [`postcss(plugins)`]).\n   *\n   * Asynchronous plugins should return a `Promise` instance.\n   *\n   * @param {Plugin|pluginFunction|Processor} plugin - PostCSS plugin\n   *                                                   or {@link Processor}\n   *                                                   with plugins\n   *\n   * @example\n   * const processor = postcss()\n   *   .use(autoprefixer)\n   *   .use(precss);\n   *\n   * @return {Processes} current processor to make methods chain\n   */\n\n\n  Processor.prototype.use = function use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]));\n    return this;\n  };\n  /**\n   * Parses source CSS and returns a {@link LazyResult} Promise proxy.\n   * Because some plugins can be asynchronous it doesn’t make\n   * any transformations. Transformations will be applied\n   * in the {@link LazyResult} methods.\n   *\n   * @param {string|toString|Result} css - String with input CSS or\n   *                                       any object with a `toString()`\n   *                                       method, like a Buffer.\n   *                                       Optionally, send a {@link Result}\n   *                                       instance and the processor will\n   *                                       take the {@link Root} from it.\n   * @param {processOptions} [opts]      - options\n   *\n   * @return {LazyResult} Promise proxy\n   *\n   * @example\n   * processor.process(css, { from: 'a.css', to: 'a.out.css' })\n   *   .then(result => {\n   *      console.log(result.css);\n   *   });\n   */\n\n\n  Processor.prototype.process = function process(css) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return new _lazyResult2.default(this, css, opts);\n  };\n\n  Processor.prototype.normalize = function normalize(plugins) {\n    var normalized = [];\n\n    for (var _iterator = plugins, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var i = _ref;\n      if (i.postcss) i = i.postcss;\n\n      if ((typeof i === 'undefined' ? 'undefined' : _typeof(i)) === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins);\n      } else if (typeof i === 'function') {\n        normalized.push(i);\n      } else if ((typeof i === 'undefined' ? 'undefined' : _typeof(i)) === 'object' && (i.parse || i.stringify)) {\n        throw new Error('PostCSS syntaxes cannot be used as plugins. ' + 'Instead, please use one of the ' + 'syntax/parser/stringifier options as ' + 'outlined in your PostCSS ' + 'runner documentation.');\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin');\n      }\n    }\n\n    return normalized;\n  };\n\n  return Processor;\n}();\n\nexports.default = Processor;\n/**\n * @callback builder\n * @param {string} part          - part of generated CSS connected to this node\n * @param {Node}   node          - AST node\n * @param {\"start\"|\"end\"} [type] - node’s part type\n */\n\n/**\n * @callback parser\n *\n * @param {string|toString} css   - string with input CSS or any object\n *                                  with toString() method, like a Buffer\n * @param {processOptions} [opts] - options with only `from` and `map` keys\n *\n * @return {Root} PostCSS AST\n */\n\n/**\n * @callback stringifier\n *\n * @param {Node} node       - start node for stringifing. Usually {@link Root}.\n * @param {builder} builder - function to concatenate CSS from node’s parts\n *                            or generate string and source map\n *\n * @return {void}\n */\n\n/**\n * @typedef {object} syntax\n * @property {parser} parse          - function to generate AST by string\n * @property {stringifier} stringify - function to generate string by AST\n */\n\n/**\n * @typedef {object} toString\n * @property {function} toString\n */\n\n/**\n * @callback pluginFunction\n * @param {Root} root     - parsed input CSS\n * @param {Result} result - result to set warnings or check other plugins\n */\n\n/**\n * @typedef {object} Plugin\n * @property {function} postcss - PostCSS plugin function\n */\n\n/**\n * @typedef {object} processOptions\n * @property {string} from             - the path of the CSS source file.\n *                                       You should always set `from`,\n *                                       because it is used in source map\n *                                       generation and syntax error messages.\n * @property {string} to               - the path where you’ll put the output\n *                                       CSS file. You should always set `to`\n *                                       to generate correct source maps.\n * @property {parser} parser           - function to generate AST by string\n * @property {stringifier} stringifier - class to generate string by AST\n * @property {syntax} syntax           - object with `parse` and `stringify`\n * @property {object} map              - source map options\n * @property {boolean} map.inline                    - does source map should\n *                                                     be embedded in the output\n *                                                     CSS as a base64-encoded\n *                                                     comment\n * @property {string|object|false|function} map.prev - source map content\n *                                                     from a previous\n *                                                     processing step\n *                                                     (for example, Sass).\n *                                                     PostCSS will try to find\n *                                                     previous map\n *                                                     automatically, so you\n *                                                     could disable it by\n *                                                     `false` value.\n * @property {boolean} map.sourcesContent            - does PostCSS should set\n *                                                     the origin content to map\n * @property {string|false} map.annotation           - does PostCSS should set\n *                                                     annotation comment to map\n * @property {string} map.from                       - override `from` in map’s\n *                                                     `sources`\n */\n\nmodule.exports = exports['default'];"},"sourceMaps":{"js":{"mappings":[{"source":"processor.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":0}},{"source":"processor.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":4}},{"source":"processor.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":15}},{"source":"processor.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":18}},{"source":"processor.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":25}},{"source":"processor.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":26}},{"source":"processor.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":41}},{"source":"processor.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":42}},{"source":"processor.es6","name":null,"original":{"line":3,"column":0},"generated":{"line":28,"column":0}},{"source":"processor.es6","name":"Processor","original":{"line":12,"column":6},"generated":{"line":39,"column":4}},{"source":"processor.es6","name":null,"original":{"line":14,"column":4},"generated":{"line":40,"column":0}},{"source":"processor.es6","name":null,"original":{"line":18,"column":4},"generated":{"line":44,"column":0}},{"source":"processor.es6","name":null,"original":{"line":18,"column":4},"generated":{"line":44,"column":11}},{"source":"processor.es6","name":null,"original":{"line":18,"column":4},"generated":{"line":44,"column":20}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":44,"column":23}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":0}},{"source":"processor.es6","name":"plugins","original":{"line":18,"column":16},"generated":{"line":45,"column":8}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":15}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":18}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":27}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":28}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":34}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":37}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":38}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":42}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":51}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":52}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":53}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":54}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":59}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":68}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":71}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":80}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":81}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":82}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":83}},{"source":"processor.es6","name":null,"original":{"line":18,"column":26},"generated":{"line":45,"column":86}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":45,"column":88}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":47,"column":0}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":47,"column":4}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":47,"column":19}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":47,"column":20}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":47,"column":24}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":47,"column":26}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":47,"column":35}},{"source":"processor.es6","name":null,"original":{"line":18,"column":30},"generated":{"line":47,"column":36}},{"source":"processor.es6","name":null,"original":{"line":19,"column":8},"generated":{"line":48,"column":0}},{"source":"processor.es6","name":null,"original":{"line":27,"column":8},"generated":{"line":58,"column":0}},{"source":"processor.es6","name":"version","original":{"line":27,"column":13},"generated":{"line":58,"column":9}},{"source":"processor.es6","name":null,"original":{"line":27,"column":8},"generated":{"line":58,"column":16}},{"source":"processor.es6","name":null,"original":{"line":27,"column":23},"generated":{"line":58,"column":19}},{"source":"processor.es6","name":null,"original":{"line":27,"column":8},"generated":{"line":58,"column":27}},{"source":"processor.es6","name":null,"original":{"line":28,"column":8},"generated":{"line":59,"column":0}},{"source":"processor.es6","name":null,"original":{"line":35,"column":8},"generated":{"line":67,"column":0}},{"source":"processor.es6","name":"plugins","original":{"line":35,"column":13},"generated":{"line":67,"column":9}},{"source":"processor.es6","name":null,"original":{"line":35,"column":8},"generated":{"line":67,"column":16}},{"source":"processor.es6","name":null,"original":{"line":35,"column":23},"generated":{"line":67,"column":19}},{"source":"processor.es6","name":"normalize","original":{"line":35,"column":28},"generated":{"line":67,"column":24}},{"source":"processor.es6","name":null,"original":{"line":35,"column":23},"generated":{"line":67,"column":33}},{"source":"processor.es6","name":"plugins","original":{"line":35,"column":38},"generated":{"line":67,"column":34}},{"source":"processor.es6","name":null,"original":{"line":35,"column":23},"generated":{"line":67,"column":41}},{"source":"processor.es6","name":null,"original":{"line":35,"column":8},"generated":{"line":67,"column":42}},{"source":"processor.es6","name":null,"original":{"line":36,"column":5},"generated":{"line":68,"column":0}},{"source":"processor.es6","name":null,"original":{"line":38,"column":4},"generated":{"line":69,"column":0}},{"source":"processor.es6","name":"use","original":{"line":67,"column":4},"generated":{"line":100,"column":22}},{"source":"processor.es6","name":"plugin","original":{"line":67,"column":8},"generated":{"line":100,"column":41}},{"source":"processor.es6","name":null,"original":{"line":67,"column":16},"generated":{"line":100,"column":49}},{"source":"processor.es6","name":null,"original":{"line":68,"column":8},"generated":{"line":101,"column":0}},{"source":"processor.es6","name":"plugins","original":{"line":68,"column":13},"generated":{"line":101,"column":9}},{"source":"processor.es6","name":null,"original":{"line":68,"column":8},"generated":{"line":101,"column":16}},{"source":"processor.es6","name":null,"original":{"line":68,"column":23},"generated":{"line":101,"column":19}},{"source":"processor.es6","name":"plugins","original":{"line":68,"column":28},"generated":{"line":101,"column":24}},{"source":"processor.es6","name":null,"original":{"line":68,"column":23},"generated":{"line":101,"column":31}},{"source":"processor.es6","name":"concat","original":{"line":68,"column":36},"generated":{"line":101,"column":32}},{"source":"processor.es6","name":null,"original":{"line":68,"column":23},"generated":{"line":101,"column":38}},{"source":"processor.es6","name":null,"original":{"line":68,"column":43},"generated":{"line":101,"column":39}},{"source":"processor.es6","name":"normalize","original":{"line":68,"column":48},"generated":{"line":101,"column":44}},{"source":"processor.es6","name":null,"original":{"line":68,"column":43},"generated":{"line":101,"column":53}},{"source":"processor.es6","name":null,"original":{"line":68,"column":58},"generated":{"line":101,"column":54}},{"source":"processor.es6","name":"plugin","original":{"line":68,"column":59},"generated":{"line":101,"column":55}},{"source":"processor.es6","name":null,"original":{"line":68,"column":58},"generated":{"line":101,"column":61}},{"source":"processor.es6","name":null,"original":{"line":68,"column":43},"generated":{"line":101,"column":62}},{"source":"processor.es6","name":null,"original":{"line":68,"column":23},"generated":{"line":101,"column":63}},{"source":"processor.es6","name":null,"original":{"line":68,"column":8},"generated":{"line":101,"column":64}},{"source":"processor.es6","name":null,"original":{"line":69,"column":8},"generated":{"line":102,"column":0}},{"source":"processor.es6","name":null,"original":{"line":69,"column":15},"generated":{"line":102,"column":11}},{"source":"processor.es6","name":null,"original":{"line":69,"column":8},"generated":{"line":102,"column":15}},{"source":"processor.es6","name":null,"original":{"line":72,"column":4},"generated":{"line":104,"column":0}},{"source":"processor.es6","name":"process","original":{"line":94,"column":4},"generated":{"line":128,"column":22}},{"source":"processor.es6","name":"css","original":{"line":94,"column":12},"generated":{"line":128,"column":49}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":128,"column":54}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":0}},{"source":"processor.es6","name":"opts","original":{"line":94,"column":17},"generated":{"line":129,"column":8}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":12}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":15}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":24}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":25}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":31}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":34}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":35}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":39}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":48}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":49}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":50}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":51}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":56}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":65}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":68}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":77}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":78}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":79}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":80}},{"source":"processor.es6","name":null,"original":{"line":94,"column":24},"generated":{"line":129,"column":83}},{"source":"processor.es6","name":null,"original":{"line":94,"column":29},"generated":{"line":129,"column":85}},{"source":"processor.es6","name":null,"original":{"line":95,"column":8},"generated":{"line":130,"column":0}},{"source":"processor.es6","name":null,"original":{"line":95,"column":15},"generated":{"line":130,"column":11}},{"source":"processor.es6","name":"LazyResult","original":{"line":95,"column":19},"generated":{"line":130,"column":15}},{"source":"processor.es6","name":"LazyResult","original":{"line":95,"column":19},"generated":{"line":130,"column":27}},{"source":"processor.es6","name":"LazyResult","original":{"line":95,"column":19},"generated":{"line":130,"column":28}},{"source":"processor.es6","name":null,"original":{"line":95,"column":15},"generated":{"line":130,"column":35}},{"source":"processor.es6","name":null,"original":{"line":95,"column":30},"generated":{"line":130,"column":36}},{"source":"processor.es6","name":null,"original":{"line":95,"column":15},"generated":{"line":130,"column":40}},{"source":"processor.es6","name":"css","original":{"line":95,"column":36},"generated":{"line":130,"column":42}},{"source":"processor.es6","name":null,"original":{"line":95,"column":15},"generated":{"line":130,"column":45}},{"source":"processor.es6","name":"opts","original":{"line":95,"column":41},"generated":{"line":130,"column":47}},{"source":"processor.es6","name":null,"original":{"line":95,"column":15},"generated":{"line":130,"column":51}},{"source":"processor.es6","name":null,"original":{"line":95,"column":8},"generated":{"line":130,"column":52}},{"source":"processor.es6","name":"normalize","original":{"line":98,"column":4},"generated":{"line":133,"column":22}},{"source":"processor.es6","name":"plugins","original":{"line":98,"column":14},"generated":{"line":133,"column":53}},{"source":"processor.es6","name":null,"original":{"line":98,"column":23},"generated":{"line":133,"column":62}},{"source":"processor.es6","name":null,"original":{"line":99,"column":8},"generated":{"line":134,"column":0}},{"source":"processor.es6","name":"normalized","original":{"line":99,"column":12},"generated":{"line":134,"column":8}},{"source":"processor.es6","name":"normalized","original":{"line":99,"column":12},"generated":{"line":134,"column":18}},{"source":"processor.es6","name":null,"original":{"line":99,"column":25},"generated":{"line":134,"column":21}},{"source":"processor.es6","name":null,"original":{"line":99,"column":8},"generated":{"line":134,"column":23}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":0}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":9}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":13}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":22}},{"source":"processor.es6","name":"plugins","original":{"line":100,"column":23},"generated":{"line":136,"column":25}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":32}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":34}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":42}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":45}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":50}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":51}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":58}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":59}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":68}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":69}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":71}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":73}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":76}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":77}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":79}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":88}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":91}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":99}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":102}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":111}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":114}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":123}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":124}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":130}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":131}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":139}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":140}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":136,"column":142}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":136,"column":146}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":137,"column":0}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":137,"column":10}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":137,"column":14}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":139,"column":0}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":139,"column":10}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":139,"column":18}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":139,"column":20}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":140,"column":0}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":140,"column":12}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":140,"column":14}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":140,"column":18}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":140,"column":27}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":140,"column":28}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":140,"column":34}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":140,"column":36}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":141,"column":0}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":141,"column":8}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":141,"column":12}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":141,"column":15}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":141,"column":24}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":141,"column":25}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":141,"column":27}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":141,"column":29}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":141,"column":30}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":142,"column":0}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":142,"column":7}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":142,"column":13}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":143,"column":0}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":143,"column":8}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":143,"column":10}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":143,"column":13}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":143,"column":22}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":143,"column":23}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":143,"column":27}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":143,"column":29}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":144,"column":0}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":144,"column":12}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":144,"column":14}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":144,"column":15}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":144,"column":19}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":144,"column":21}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":145,"column":0}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":145,"column":8}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":145,"column":12}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":145,"column":15}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":145,"column":17}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":145,"column":18}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":145,"column":23}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":146,"column":0}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":148,"column":0}},{"source":"processor.es6","name":"i","original":{"line":100,"column":18},"generated":{"line":148,"column":10}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":148,"column":11}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":148,"column":14}},{"source":"processor.es6","name":null,"original":{"line":100,"column":33},"generated":{"line":148,"column":18}},{"source":"processor.es6","name":null,"original":{"line":101,"column":12},"generated":{"line":149,"column":0}},{"source":"processor.es6","name":"i","original":{"line":101,"column":17},"generated":{"line":149,"column":10}},{"source":"processor.es6","name":"i","original":{"line":101,"column":17},"generated":{"line":149,"column":11}},{"source":"processor.es6","name":"postcss","original":{"line":101,"column":19},"generated":{"line":149,"column":12}},{"source":"processor.es6","name":null,"original":{"line":101,"column":12},"generated":{"line":149,"column":19}},{"source":"processor.es6","name":"i","original":{"line":101,"column":29},"generated":{"line":149,"column":21}},{"source":"processor.es6","name":"i","original":{"line":101,"column":29},"generated":{"line":149,"column":22}},{"source":"processor.es6","name":"i","original":{"line":101,"column":33},"generated":{"line":149,"column":25}},{"source":"processor.es6","name":"i","original":{"line":101,"column":33},"generated":{"line":149,"column":26}},{"source":"processor.es6","name":"postcss","original":{"line":101,"column":35},"generated":{"line":149,"column":27}},{"source":"processor.es6","name":"i","original":{"line":101,"column":29},"generated":{"line":149,"column":34}},{"source":"processor.es6","name":null,"original":{"line":103,"column":12},"generated":{"line":151,"column":0}},{"source":"processor.es6","name":null,"original":{"line":103,"column":17},"generated":{"line":151,"column":10}},{"source":"processor.es6","name":null,"original":{"line":103,"column":17},"generated":{"line":151,"column":11}},{"source":"processor.es6","name":"i","original":{"line":103,"column":24},"generated":{"line":151,"column":18}},{"source":"processor.es6","name":null,"original":{"line":103,"column":17},"generated":{"line":151,"column":19}},{"source":"processor.es6","name":null,"original":{"line":103,"column":17},"generated":{"line":151,"column":24}},{"source":"processor.es6","name":null,"original":{"line":103,"column":17},"generated":{"line":151,"column":35}},{"source":"processor.es6","name":null,"original":{"line":103,"column":17},"generated":{"line":151,"column":38}},{"source":"processor.es6","name":null,"original":{"line":103,"column":17},"generated":{"line":151,"column":49}},{"source":"processor.es6","name":null,"original":{"line":103,"column":17},"generated":{"line":151,"column":52}},{"source":"processor.es6","name":null,"original":{"line":103,"column":17},"generated":{"line":151,"column":59}},{"source":"processor.es6","name":"i","original":{"line":103,"column":24},"generated":{"line":151,"column":60}},{"source":"processor.es6","name":null,"original":{"line":103,"column":17},"generated":{"line":151,"column":61}},{"source":"processor.es6","name":null,"original":{"line":103,"column":17},"generated":{"line":151,"column":62}},{"source":"processor.es6","name":null,"original":{"line":103,"column":30},"generated":{"line":151,"column":68}},{"source":"processor.es6","name":null,"original":{"line":103,"column":17},"generated":{"line":151,"column":76}},{"source":"processor.es6","name":"Array","original":{"line":103,"column":42},"generated":{"line":151,"column":80}},{"source":"processor.es6","name":"Array","original":{"line":103,"column":42},"generated":{"line":151,"column":85}},{"source":"processor.es6","name":"isArray","original":{"line":103,"column":48},"generated":{"line":151,"column":86}},{"source":"processor.es6","name":"Array","original":{"line":103,"column":42},"generated":{"line":151,"column":93}},{"source":"processor.es6","name":"i","original":{"line":103,"column":56},"generated":{"line":151,"column":94}},{"source":"processor.es6","name":"i","original":{"line":103,"column":56},"generated":{"line":151,"column":95}},{"source":"processor.es6","name":"plugins","original":{"line":103,"column":58},"generated":{"line":151,"column":96}},{"source":"processor.es6","name":"Array","original":{"line":103,"column":42},"generated":{"line":151,"column":103}},{"source":"processor.es6","name":null,"original":{"line":103,"column":12},"generated":{"line":151,"column":104}},{"source":"processor.es6","name":null,"original":{"line":103,"column":69},"generated":{"line":151,"column":106}},{"source":"processor.es6","name":"normalized","original":{"line":104,"column":16},"generated":{"line":152,"column":0}},{"source":"processor.es6","name":"normalized","original":{"line":104,"column":16},"generated":{"line":152,"column":8}},{"source":"processor.es6","name":"normalized","original":{"line":104,"column":16},"generated":{"line":152,"column":18}},{"source":"processor.es6","name":"normalized","original":{"line":104,"column":29},"generated":{"line":152,"column":21}},{"source":"processor.es6","name":"normalized","original":{"line":104,"column":29},"generated":{"line":152,"column":31}},{"source":"processor.es6","name":"concat","original":{"line":104,"column":40},"generated":{"line":152,"column":32}},{"source":"processor.es6","name":"normalized","original":{"line":104,"column":29},"generated":{"line":152,"column":38}},{"source":"processor.es6","name":"i","original":{"line":104,"column":47},"generated":{"line":152,"column":39}},{"source":"processor.es6","name":"i","original":{"line":104,"column":47},"generated":{"line":152,"column":40}},{"source":"processor.es6","name":"plugins","original":{"line":104,"column":49},"generated":{"line":152,"column":41}},{"source":"processor.es6","name":"normalized","original":{"line":104,"column":29},"generated":{"line":152,"column":48}},{"source":"processor.es6","name":"normalized","original":{"line":104,"column":16},"generated":{"line":152,"column":49}},{"source":"processor.es6","name":null,"original":{"line":103,"column":12},"generated":{"line":153,"column":0}},{"source":"processor.es6","name":null,"original":{"line":103,"column":12},"generated":{"line":153,"column":7}},{"source":"processor.es6","name":null,"original":{"line":105,"column":19},"generated":{"line":153,"column":13}},{"source":"processor.es6","name":null,"original":{"line":105,"column":24},"generated":{"line":153,"column":17}},{"source":"processor.es6","name":"i","original":{"line":105,"column":31},"generated":{"line":153,"column":24}},{"source":"processor.es6","name":null,"original":{"line":105,"column":24},"generated":{"line":153,"column":25}},{"source":"processor.es6","name":null,"original":{"line":105,"column":37},"generated":{"line":153,"column":30}},{"source":"processor.es6","name":null,"original":{"line":105,"column":19},"generated":{"line":153,"column":40}},{"source":"processor.es6","name":null,"original":{"line":105,"column":50},"generated":{"line":153,"column":42}},{"source":"processor.es6","name":"normalized","original":{"line":106,"column":16},"generated":{"line":154,"column":0}},{"source":"processor.es6","name":"normalized","original":{"line":106,"column":16},"generated":{"line":154,"column":8}},{"source":"processor.es6","name":"normalized","original":{"line":106,"column":16},"generated":{"line":154,"column":18}},{"source":"processor.es6","name":"push","original":{"line":106,"column":27},"generated":{"line":154,"column":19}},{"source":"processor.es6","name":"normalized","original":{"line":106,"column":16},"generated":{"line":154,"column":23}},{"source":"processor.es6","name":"i","original":{"line":106,"column":32},"generated":{"line":154,"column":24}},{"source":"processor.es6","name":"normalized","original":{"line":106,"column":16},"generated":{"line":154,"column":25}},{"source":"processor.es6","name":null,"original":{"line":105,"column":19},"generated":{"line":155,"column":0}},{"source":"processor.es6","name":null,"original":{"line":105,"column":19},"generated":{"line":155,"column":7}},{"source":"processor.es6","name":null,"original":{"line":107,"column":19},"generated":{"line":155,"column":13}},{"source":"processor.es6","name":null,"original":{"line":107,"column":24},"generated":{"line":155,"column":17}},{"source":"processor.es6","name":null,"original":{"line":107,"column":24},"generated":{"line":155,"column":18}},{"source":"processor.es6","name":"i","original":{"line":107,"column":31},"generated":{"line":155,"column":25}},{"source":"processor.es6","name":null,"original":{"line":107,"column":24},"generated":{"line":155,"column":26}},{"source":"processor.es6","name":null,"original":{"line":107,"column":24},"generated":{"line":155,"column":31}},{"source":"processor.es6","name":null,"original":{"line":107,"column":24},"generated":{"line":155,"column":42}},{"source":"processor.es6","name":null,"original":{"line":107,"column":24},"generated":{"line":155,"column":45}},{"source":"processor.es6","name":null,"original":{"line":107,"column":24},"generated":{"line":155,"column":56}},{"source":"processor.es6","name":null,"original":{"line":107,"column":24},"generated":{"line":155,"column":59}},{"source":"processor.es6","name":null,"original":{"line":107,"column":24},"generated":{"line":155,"column":66}},{"source":"processor.es6","name":"i","original":{"line":107,"column":31},"generated":{"line":155,"column":67}},{"source":"processor.es6","name":null,"original":{"line":107,"column":24},"generated":{"line":155,"column":68}},{"source":"processor.es6","name":null,"original":{"line":107,"column":24},"generated":{"line":155,"column":69}},{"source":"processor.es6","name":null,"original":{"line":107,"column":37},"generated":{"line":155,"column":75}},{"source":"processor.es6","name":null,"original":{"line":107,"column":24},"generated":{"line":155,"column":83}},{"source":"processor.es6","name":"i","original":{"line":107,"column":50},"generated":{"line":155,"column":88}},{"source":"processor.es6","name":"i","original":{"line":107,"column":50},"generated":{"line":155,"column":89}},{"source":"processor.es6","name":"parse","original":{"line":107,"column":52},"generated":{"line":155,"column":90}},{"source":"processor.es6","name":"i","original":{"line":107,"column":50},"generated":{"line":155,"column":95}},{"source":"processor.es6","name":"i","original":{"line":107,"column":61},"generated":{"line":155,"column":99}},{"source":"processor.es6","name":"i","original":{"line":107,"column":61},"generated":{"line":155,"column":100}},{"source":"processor.es6","name":"stringify","original":{"line":107,"column":63},"generated":{"line":155,"column":101}},{"source":"processor.es6","name":null,"original":{"line":107,"column":24},"generated":{"line":155,"column":110}},{"source":"processor.es6","name":null,"original":{"line":107,"column":19},"generated":{"line":155,"column":111}},{"source":"processor.es6","name":null,"original":{"line":107,"column":76},"generated":{"line":155,"column":113}},{"source":"processor.es6","name":null,"original":{"line":108,"column":16},"generated":{"line":156,"column":0}},{"source":"processor.es6","name":null,"original":{"line":108,"column":22},"generated":{"line":156,"column":14}},{"source":"processor.es6","name":"Error","original":{"line":108,"column":26},"generated":{"line":156,"column":18}},{"source":"processor.es6","name":null,"original":{"line":108,"column":22},"generated":{"line":156,"column":23}},{"source":"processor.es6","name":null,"original":{"line":108,"column":32},"generated":{"line":156,"column":24}},{"source":"processor.es6","name":null,"original":{"line":109,"column":32},"generated":{"line":156,"column":73}},{"source":"processor.es6","name":null,"original":{"line":108,"column":32},"generated":{"line":156,"column":106}},{"source":"processor.es6","name":null,"original":{"line":110,"column":32},"generated":{"line":156,"column":109}},{"source":"processor.es6","name":null,"original":{"line":108,"column":32},"generated":{"line":156,"column":148}},{"source":"processor.es6","name":null,"original":{"line":111,"column":32},"generated":{"line":156,"column":151}},{"source":"processor.es6","name":null,"original":{"line":108,"column":32},"generated":{"line":156,"column":178}},{"source":"processor.es6","name":null,"original":{"line":112,"column":32},"generated":{"line":156,"column":181}},{"source":"processor.es6","name":null,"original":{"line":108,"column":22},"generated":{"line":156,"column":204}},{"source":"processor.es6","name":null,"original":{"line":108,"column":16},"generated":{"line":156,"column":205}},{"source":"processor.es6","name":null,"original":{"line":107,"column":19},"generated":{"line":157,"column":0}},{"source":"processor.es6","name":null,"original":{"line":107,"column":19},"generated":{"line":157,"column":7}},{"source":"processor.es6","name":null,"original":{"line":113,"column":19},"generated":{"line":157,"column":13}},{"source":"processor.es6","name":null,"original":{"line":114,"column":16},"generated":{"line":158,"column":0}},{"source":"processor.es6","name":null,"original":{"line":114,"column":22},"generated":{"line":158,"column":14}},{"source":"processor.es6","name":"Error","original":{"line":114,"column":26},"generated":{"line":158,"column":18}},{"source":"processor.es6","name":null,"original":{"line":114,"column":22},"generated":{"line":158,"column":23}},{"source":"processor.es6","name":"i","original":{"line":114,"column":32},"generated":{"line":158,"column":24}},{"source":"processor.es6","name":"i","original":{"line":114,"column":32},"generated":{"line":158,"column":25}},{"source":"processor.es6","name":null,"original":{"line":114,"column":36},"generated":{"line":158,"column":28}},{"source":"processor.es6","name":null,"original":{"line":114,"column":22},"generated":{"line":158,"column":54}},{"source":"processor.es6","name":null,"original":{"line":114,"column":16},"generated":{"line":158,"column":55}},{"source":"processor.es6","name":null,"original":{"line":115,"column":13},"generated":{"line":159,"column":0}},{"source":"processor.es6","name":null,"original":{"line":116,"column":9},"generated":{"line":160,"column":0}},{"source":"processor.es6","name":null,"original":{"line":117,"column":8},"generated":{"line":162,"column":0}},{"source":"processor.es6","name":"normalized","original":{"line":117,"column":15},"generated":{"line":162,"column":11}},{"source":"processor.es6","name":null,"original":{"line":117,"column":8},"generated":{"line":162,"column":21}},{"source":"processor.es6","name":"Processor","original":{"line":122,"column":15},"generated":{"line":168,"column":18}},{"source":"processor.es6","name":null,"original":{"line":124,"column":0},"generated":{"line":169,"column":0}},{"source":"processor.es6","name":null,"original":{"line":131,"column":0},"generated":{"line":176,"column":0}},{"source":"processor.es6","name":null,"original":{"line":141,"column":0},"generated":{"line":186,"column":0}},{"source":"processor.es6","name":null,"original":{"line":151,"column":0},"generated":{"line":196,"column":0}},{"source":"processor.es6","name":null,"original":{"line":157,"column":0},"generated":{"line":202,"column":0}},{"source":"processor.es6","name":null,"original":{"line":162,"column":0},"generated":{"line":207,"column":0}},{"source":"processor.es6","name":null,"original":{"line":168,"column":0},"generated":{"line":213,"column":0}},{"source":"processor.es6","name":null,"original":{"line":173,"column":0},"generated":{"line":218,"column":0}}],"sources":{"processor.es6":"import LazyResult from './lazy-result';\n\n/**\n * Contains plugins to process CSS. Create one `Processor` instance,\n * initialize its plugins, and then use that instance on numerous CSS files.\n *\n * @example\n * const processor = postcss([autoprefixer, precss]);\n * processor.process(css1).then(result => console.log(result.css));\n * processor.process(css2).then(result => console.log(result.css));\n */\nclass Processor {\n\n    /**\n     * @param {Array.<Plugin|pluginFunction>|Processor} plugins - PostCSS\n     *        plugins. See {@link Processor#use} for plugin format.\n     */\n    constructor(plugins = []) {\n        /**\n         * @member {string} - Current PostCSS version.\n         *\n         * @example\n         * if ( result.processor.version.split('.')[0] !== '6' ) {\n         *   throw new Error('This plugin works only with PostCSS 6');\n         * }\n         */\n        this.version = '6.0.23';\n        /**\n         * @member {pluginFunction[]} - Plugins added to this processor.\n         *\n         * @example\n         * const processor = postcss([autoprefixer, precss]);\n         * processor.plugins.length //=> 2\n         */\n        this.plugins = this.normalize(plugins);\n    }\n\n    /**\n     * Adds a plugin to be used as a CSS processor.\n     *\n     * PostCSS plugin can be in 4 formats:\n     * * A plugin created by {@link postcss.plugin} method.\n     * * A function. PostCSS will pass the function a @{link Root}\n     *   as the first argument and current {@link Result} instance\n     *   as the second.\n     * * An object with a `postcss` method. PostCSS will use that method\n     *   as described in #2.\n     * * Another {@link Processor} instance. PostCSS will copy plugins\n     *   from that instance into this one.\n     *\n     * Plugins can also be added by passing them as arguments when creating\n     * a `postcss` instance (see [`postcss(plugins)`]).\n     *\n     * Asynchronous plugins should return a `Promise` instance.\n     *\n     * @param {Plugin|pluginFunction|Processor} plugin - PostCSS plugin\n     *                                                   or {@link Processor}\n     *                                                   with plugins\n     *\n     * @example\n     * const processor = postcss()\n     *   .use(autoprefixer)\n     *   .use(precss);\n     *\n     * @return {Processes} current processor to make methods chain\n     */\n    use(plugin) {\n        this.plugins = this.plugins.concat(this.normalize([plugin]));\n        return this;\n    }\n\n    /**\n     * Parses source CSS and returns a {@link LazyResult} Promise proxy.\n     * Because some plugins can be asynchronous it doesn’t make\n     * any transformations. Transformations will be applied\n     * in the {@link LazyResult} methods.\n     *\n     * @param {string|toString|Result} css - String with input CSS or\n     *                                       any object with a `toString()`\n     *                                       method, like a Buffer.\n     *                                       Optionally, send a {@link Result}\n     *                                       instance and the processor will\n     *                                       take the {@link Root} from it.\n     * @param {processOptions} [opts]      - options\n     *\n     * @return {LazyResult} Promise proxy\n     *\n     * @example\n     * processor.process(css, { from: 'a.css', to: 'a.out.css' })\n     *   .then(result => {\n     *      console.log(result.css);\n     *   });\n     */\n    process(css, opts = { }) {\n        return new LazyResult(this, css, opts);\n    }\n\n    normalize(plugins) {\n        let normalized = [];\n        for ( let i of plugins ) {\n            if ( i.postcss ) i = i.postcss;\n\n            if ( typeof i === 'object' && Array.isArray(i.plugins) ) {\n                normalized = normalized.concat(i.plugins);\n            } else if ( typeof i === 'function' ) {\n                normalized.push(i);\n            } else if ( typeof i === 'object' && (i.parse || i.stringify) ) {\n                throw new Error('PostCSS syntaxes cannot be used as plugins. ' +\n                                'Instead, please use one of the ' +\n                                'syntax/parser/stringifier options as ' +\n                                'outlined in your PostCSS ' +\n                                'runner documentation.');\n            } else {\n                throw new Error(i + ' is not a PostCSS plugin');\n            }\n        }\n        return normalized;\n    }\n\n}\n\nexport default Processor;\n\n/**\n * @callback builder\n * @param {string} part          - part of generated CSS connected to this node\n * @param {Node}   node          - AST node\n * @param {\"start\"|\"end\"} [type] - node’s part type\n */\n\n/**\n * @callback parser\n *\n * @param {string|toString} css   - string with input CSS or any object\n *                                  with toString() method, like a Buffer\n * @param {processOptions} [opts] - options with only `from` and `map` keys\n *\n * @return {Root} PostCSS AST\n */\n\n/**\n * @callback stringifier\n *\n * @param {Node} node       - start node for stringifing. Usually {@link Root}.\n * @param {builder} builder - function to concatenate CSS from node’s parts\n *                            or generate string and source map\n *\n * @return {void}\n */\n\n/**\n * @typedef {object} syntax\n * @property {parser} parse          - function to generate AST by string\n * @property {stringifier} stringify - function to generate string by AST\n */\n\n/**\n * @typedef {object} toString\n * @property {function} toString\n */\n\n/**\n * @callback pluginFunction\n * @param {Root} root     - parsed input CSS\n * @param {Result} result - result to set warnings or check other plugins\n */\n\n/**\n * @typedef {object} Plugin\n * @property {function} postcss - PostCSS plugin function\n */\n\n/**\n * @typedef {object} processOptions\n * @property {string} from             - the path of the CSS source file.\n *                                       You should always set `from`,\n *                                       because it is used in source map\n *                                       generation and syntax error messages.\n * @property {string} to               - the path where you’ll put the output\n *                                       CSS file. You should always set `to`\n *                                       to generate correct source maps.\n * @property {parser} parser           - function to generate AST by string\n * @property {stringifier} stringifier - class to generate string by AST\n * @property {syntax} syntax           - object with `parse` and `stringify`\n * @property {object} map              - source map options\n * @property {boolean} map.inline                    - does source map should\n *                                                     be embedded in the output\n *                                                     CSS as a base64-encoded\n *                                                     comment\n * @property {string|object|false|function} map.prev - source map content\n *                                                     from a previous\n *                                                     processing step\n *                                                     (for example, Sass).\n *                                                     PostCSS will try to find\n *                                                     previous map\n *                                                     automatically, so you\n *                                                     could disable it by\n *                                                     `false` value.\n * @property {boolean} map.sourcesContent            - does PostCSS should set\n *                                                     the origin content to map\n * @property {string|false} map.annotation           - does PostCSS should set\n *                                                     annotation comment to map\n * @property {string} map.from                       - override `from` in map’s\n *                                                     `sources`\n */\n"},"lineCount":null}},"error":null,"hash":"49926cf5e0325ae98b0981ddfdf8bf9d","cacheData":{"env":{}}}