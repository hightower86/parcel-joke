{"id":"node_modules/postcss/lib/result.js","dependencies":[{"name":"/Users/macbook/Desktop/KODING/Traversy-Media/parcel/parsel-joke/package.json","includedInParent":true,"mtime":1565716104892},{"name":"/Users/macbook/Desktop/KODING/Traversy-Media/parcel/parsel-joke/node_modules/postcss/package.json","includedInParent":true,"mtime":1558416471631},{"name":"./warning","loc":{"line":7,"column":23},"parent":"/Users/macbook/Desktop/KODING/Traversy-Media/parcel/parsel-joke/node_modules/postcss/lib/result.js","resolved":"/Users/macbook/Desktop/KODING/Traversy-Media/parcel/parsel-joke/node_modules/postcss/lib/warning.js"}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _warning = require('./warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * Provides the result of the PostCSS transformations.\n *\n * A Result instance is returned by {@link LazyResult#then}\n * or {@link Root#toResult} methods.\n *\n * @example\n * postcss([cssnext]).process(css).then(function (result) {\n *    console.log(result.css);\n * });\n *\n * @example\n * var result2 = postcss.parse(css).toResult();\n */\n\n\nvar Result = function () {\n  /**\n   * @param {Processor} processor - processor used for this transformation.\n   * @param {Root}      root      - Root node after all transformations.\n   * @param {processOptions} opts - options from the {@link Processor#process}\n   *                                or {@link Root#toResult}\n   */\n  function Result(processor, root, opts) {\n    _classCallCheck(this, Result);\n    /**\n     * @member {Processor} - The Processor instance used\n     *                       for this transformation.\n     *\n     * @example\n     * for ( let plugin of result.processor.plugins) {\n     *   if ( plugin.postcssPlugin === 'postcss-bad' ) {\n     *     throw 'postcss-good is incompatible with postcss-bad';\n     *   }\n     * });\n     */\n\n\n    this.processor = processor;\n    /**\n     * @member {Message[]} - Contains messages from plugins\n     *                       (e.g., warnings or custom messages).\n     *                       Each message should have type\n     *                       and plugin properties.\n     *\n     * @example\n     * postcss.plugin('postcss-min-browser', () => {\n     *   return (root, result) => {\n     *     var browsers = detectMinBrowsersByCanIUse(root);\n     *     result.messages.push({\n     *       type:    'min-browser',\n     *       plugin:  'postcss-min-browser',\n     *       browsers: browsers\n     *     });\n     *   };\n     * });\n     */\n\n    this.messages = [];\n    /**\n     * @member {Root} - Root node after all transformations.\n     *\n     * @example\n     * root.toResult().root == root;\n     */\n\n    this.root = root;\n    /**\n     * @member {processOptions} - Options from the {@link Processor#process}\n     *                            or {@link Root#toResult} call\n     *                            that produced this Result instance.\n     *\n     * @example\n     * root.toResult(opts).opts == opts;\n     */\n\n    this.opts = opts;\n    /**\n     * @member {string} - A CSS string representing of {@link Result#root}.\n     *\n     * @example\n     * postcss.parse('a{}').toResult().css //=> \"a{}\"\n     */\n\n    this.css = undefined;\n    /**\n     * @member {SourceMapGenerator} - An instance of `SourceMapGenerator`\n     *                                class from the `source-map` library,\n     *                                representing changes\n     *                                to the {@link Result#root} instance.\n     *\n     * @example\n     * result.map.toJSON() //=> { version: 3, file: 'a.css', â€¦ }\n     *\n     * @example\n     * if ( result.map ) {\n     *   fs.writeFileSync(result.opts.to + '.map', result.map.toString());\n     * }\n     */\n\n    this.map = undefined;\n  }\n  /**\n   * Returns for @{link Result#css} content.\n   *\n   * @example\n   * result + '' === result.css\n   *\n   * @return {string} string representing of {@link Result#root}\n   */\n\n\n  Result.prototype.toString = function toString() {\n    return this.css;\n  };\n  /**\n   * Creates an instance of {@link Warning} and adds it\n   * to {@link Result#messages}.\n   *\n   * @param {string} text        - warning message\n   * @param {Object} [opts]      - warning options\n   * @param {Node}   opts.node   - CSS node that caused the warning\n   * @param {string} opts.word   - word in CSS source that caused the warning\n   * @param {number} opts.index  - index in CSS node string that caused\n   *                               the warning\n   * @param {string} opts.plugin - name of the plugin that created\n   *                               this warning. {@link Result#warn} fills\n   *                               this property automatically.\n   *\n   * @return {Warning} created warning\n   */\n\n\n  Result.prototype.warn = function warn(text) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin;\n      }\n    }\n\n    var warning = new _warning2.default(text, opts);\n    this.messages.push(warning);\n    return warning;\n  };\n  /**\n   * Returns warnings from plugins. Filters {@link Warning} instances\n   * from {@link Result#messages}.\n   *\n   * @example\n   * result.warnings().forEach(warn => {\n   *   console.warn(warn.toString());\n   * });\n   *\n   * @return {Warning[]} warnings from plugins\n   */\n\n\n  Result.prototype.warnings = function warnings() {\n    return this.messages.filter(function (i) {\n      return i.type === 'warning';\n    });\n  };\n  /**\n   * An alias for the {@link Result#css} property.\n   * Use it with syntaxes that generate non-CSS output.\n   * @type {string}\n   *\n   * @example\n   * result.css === result.content;\n   */\n\n\n  _createClass(Result, [{\n    key: 'content',\n    get: function get() {\n      return this.css;\n    }\n  }]);\n\n  return Result;\n}();\n\nexports.default = Result;\n/**\n * @typedef  {object} Message\n * @property {string} type   - message type\n * @property {string} plugin - source PostCSS plugin name\n */\n\nmodule.exports = exports['default'];"},"sourceMaps":{"js":{"mappings":[{"source":"result.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":23,"column":0}},{"source":"result.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":23,"column":4}},{"source":"result.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":23,"column":12}},{"source":"result.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":23,"column":15}},{"source":"result.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":23,"column":22}},{"source":"result.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":23,"column":23}},{"source":"result.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":23,"column":34}},{"source":"result.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":23,"column":35}},{"source":"result.es6","name":null,"original":{"line":3,"column":0},"generated":{"line":38,"column":0}},{"source":"result.es6","name":"Result","original":{"line":17,"column":6},"generated":{"line":54,"column":4}},{"source":"result.es6","name":null,"original":{"line":19,"column":4},"generated":{"line":55,"column":0}},{"source":"result.es6","name":null,"original":{"line":25,"column":4},"generated":{"line":61,"column":0}},{"source":"result.es6","name":null,"original":{"line":25,"column":4},"generated":{"line":61,"column":11}},{"source":"result.es6","name":null,"original":{"line":25,"column":4},"generated":{"line":61,"column":17}},{"source":"result.es6","name":"processor","original":{"line":25,"column":16},"generated":{"line":61,"column":18}},{"source":"result.es6","name":null,"original":{"line":25,"column":4},"generated":{"line":61,"column":27}},{"source":"result.es6","name":"root","original":{"line":25,"column":27},"generated":{"line":61,"column":29}},{"source":"result.es6","name":null,"original":{"line":25,"column":4},"generated":{"line":61,"column":33}},{"source":"result.es6","name":"opts","original":{"line":25,"column":33},"generated":{"line":61,"column":35}},{"source":"result.es6","name":null,"original":{"line":25,"column":4},"generated":{"line":61,"column":39}},{"source":"result.es6","name":null,"original":{"line":25,"column":39},"generated":{"line":61,"column":41}},{"source":"result.es6","name":null,"original":{"line":25,"column":39},"generated":{"line":62,"column":0}},{"source":"result.es6","name":null,"original":{"line":25,"column":39},"generated":{"line":62,"column":4}},{"source":"result.es6","name":null,"original":{"line":25,"column":39},"generated":{"line":62,"column":19}},{"source":"result.es6","name":null,"original":{"line":25,"column":39},"generated":{"line":62,"column":20}},{"source":"result.es6","name":null,"original":{"line":25,"column":39},"generated":{"line":62,"column":24}},{"source":"result.es6","name":null,"original":{"line":25,"column":39},"generated":{"line":62,"column":26}},{"source":"result.es6","name":null,"original":{"line":25,"column":39},"generated":{"line":62,"column":32}},{"source":"result.es6","name":null,"original":{"line":25,"column":39},"generated":{"line":62,"column":33}},{"source":"result.es6","name":null,"original":{"line":26,"column":8},"generated":{"line":63,"column":0}},{"source":"result.es6","name":null,"original":{"line":37,"column":8},"generated":{"line":76,"column":0}},{"source":"result.es6","name":"processor","original":{"line":37,"column":13},"generated":{"line":76,"column":9}},{"source":"result.es6","name":null,"original":{"line":37,"column":8},"generated":{"line":76,"column":18}},{"source":"result.es6","name":"processor","original":{"line":37,"column":25},"generated":{"line":76,"column":21}},{"source":"result.es6","name":null,"original":{"line":37,"column":8},"generated":{"line":76,"column":30}},{"source":"result.es6","name":null,"original":{"line":38,"column":8},"generated":{"line":77,"column":0}},{"source":"result.es6","name":null,"original":{"line":56,"column":8},"generated":{"line":96,"column":0}},{"source":"result.es6","name":"messages","original":{"line":56,"column":13},"generated":{"line":96,"column":9}},{"source":"result.es6","name":null,"original":{"line":56,"column":8},"generated":{"line":96,"column":17}},{"source":"result.es6","name":null,"original":{"line":56,"column":24},"generated":{"line":96,"column":20}},{"source":"result.es6","name":null,"original":{"line":56,"column":8},"generated":{"line":96,"column":22}},{"source":"result.es6","name":null,"original":{"line":57,"column":8},"generated":{"line":97,"column":0}},{"source":"result.es6","name":null,"original":{"line":63,"column":8},"generated":{"line":104,"column":0}},{"source":"result.es6","name":"root","original":{"line":63,"column":13},"generated":{"line":104,"column":9}},{"source":"result.es6","name":null,"original":{"line":63,"column":8},"generated":{"line":104,"column":13}},{"source":"result.es6","name":"root","original":{"line":63,"column":20},"generated":{"line":104,"column":16}},{"source":"result.es6","name":null,"original":{"line":63,"column":8},"generated":{"line":104,"column":20}},{"source":"result.es6","name":null,"original":{"line":64,"column":8},"generated":{"line":105,"column":0}},{"source":"result.es6","name":null,"original":{"line":72,"column":8},"generated":{"line":114,"column":0}},{"source":"result.es6","name":"opts","original":{"line":72,"column":13},"generated":{"line":114,"column":9}},{"source":"result.es6","name":null,"original":{"line":72,"column":8},"generated":{"line":114,"column":13}},{"source":"result.es6","name":"opts","original":{"line":72,"column":20},"generated":{"line":114,"column":16}},{"source":"result.es6","name":null,"original":{"line":72,"column":8},"generated":{"line":114,"column":20}},{"source":"result.es6","name":null,"original":{"line":73,"column":8},"generated":{"line":115,"column":0}},{"source":"result.es6","name":null,"original":{"line":79,"column":8},"generated":{"line":122,"column":0}},{"source":"result.es6","name":"css","original":{"line":79,"column":13},"generated":{"line":122,"column":9}},{"source":"result.es6","name":null,"original":{"line":79,"column":8},"generated":{"line":122,"column":12}},{"source":"result.es6","name":"undefined","original":{"line":79,"column":19},"generated":{"line":122,"column":15}},{"source":"result.es6","name":null,"original":{"line":79,"column":8},"generated":{"line":122,"column":24}},{"source":"result.es6","name":null,"original":{"line":80,"column":8},"generated":{"line":123,"column":0}},{"source":"result.es6","name":null,"original":{"line":94,"column":8},"generated":{"line":138,"column":0}},{"source":"result.es6","name":"map","original":{"line":94,"column":13},"generated":{"line":138,"column":9}},{"source":"result.es6","name":null,"original":{"line":94,"column":8},"generated":{"line":138,"column":12}},{"source":"result.es6","name":"undefined","original":{"line":94,"column":19},"generated":{"line":138,"column":15}},{"source":"result.es6","name":null,"original":{"line":94,"column":8},"generated":{"line":138,"column":24}},{"source":"result.es6","name":null,"original":{"line":95,"column":5},"generated":{"line":139,"column":0}},{"source":"result.es6","name":null,"original":{"line":97,"column":4},"generated":{"line":140,"column":0}},{"source":"result.es6","name":"toString","original":{"line":105,"column":4},"generated":{"line":150,"column":19}},{"source":"result.es6","name":null,"original":{"line":105,"column":15},"generated":{"line":150,"column":50}},{"source":"result.es6","name":null,"original":{"line":106,"column":8},"generated":{"line":151,"column":0}},{"source":"result.es6","name":null,"original":{"line":106,"column":15},"generated":{"line":151,"column":11}},{"source":"result.es6","name":"css","original":{"line":106,"column":20},"generated":{"line":151,"column":16}},{"source":"result.es6","name":null,"original":{"line":106,"column":8},"generated":{"line":151,"column":19}},{"source":"result.es6","name":null,"original":{"line":109,"column":4},"generated":{"line":153,"column":0}},{"source":"result.es6","name":"warn","original":{"line":125,"column":4},"generated":{"line":171,"column":19}},{"source":"result.es6","name":"text","original":{"line":125,"column":9},"generated":{"line":171,"column":40}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":171,"column":46}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":0}},{"source":"result.es6","name":"opts","original":{"line":125,"column":15},"generated":{"line":172,"column":8}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":12}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":15}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":24}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":25}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":31}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":34}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":35}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":39}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":48}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":49}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":50}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":51}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":56}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":65}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":68}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":77}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":78}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":79}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":80}},{"source":"result.es6","name":null,"original":{"line":125,"column":22},"generated":{"line":172,"column":83}},{"source":"result.es6","name":null,"original":{"line":125,"column":27},"generated":{"line":172,"column":85}},{"source":"result.es6","name":null,"original":{"line":126,"column":8},"generated":{"line":174,"column":0}},{"source":"result.es6","name":null,"original":{"line":126,"column":13},"generated":{"line":174,"column":8}},{"source":"result.es6","name":"opts","original":{"line":126,"column":14},"generated":{"line":174,"column":9}},{"source":"result.es6","name":"opts","original":{"line":126,"column":14},"generated":{"line":174,"column":13}},{"source":"result.es6","name":"plugin","original":{"line":126,"column":19},"generated":{"line":174,"column":14}},{"source":"result.es6","name":null,"original":{"line":126,"column":8},"generated":{"line":174,"column":20}},{"source":"result.es6","name":null,"original":{"line":126,"column":28},"generated":{"line":174,"column":22}},{"source":"result.es6","name":null,"original":{"line":127,"column":12},"generated":{"line":175,"column":0}},{"source":"result.es6","name":null,"original":{"line":127,"column":17},"generated":{"line":175,"column":10}},{"source":"result.es6","name":"lastPlugin","original":{"line":127,"column":22},"generated":{"line":175,"column":15}},{"source":"result.es6","name":null,"original":{"line":127,"column":17},"generated":{"line":175,"column":25}},{"source":"result.es6","name":null,"original":{"line":127,"column":36},"generated":{"line":175,"column":29}},{"source":"result.es6","name":"lastPlugin","original":{"line":127,"column":41},"generated":{"line":175,"column":34}},{"source":"result.es6","name":null,"original":{"line":127,"column":36},"generated":{"line":175,"column":44}},{"source":"result.es6","name":"postcssPlugin","original":{"line":127,"column":52},"generated":{"line":175,"column":45}},{"source":"result.es6","name":null,"original":{"line":127,"column":12},"generated":{"line":175,"column":58}},{"source":"result.es6","name":null,"original":{"line":127,"column":68},"generated":{"line":175,"column":60}},{"source":"result.es6","name":"opts","original":{"line":128,"column":16},"generated":{"line":176,"column":0}},{"source":"result.es6","name":"opts","original":{"line":128,"column":16},"generated":{"line":176,"column":8}},{"source":"result.es6","name":"opts","original":{"line":128,"column":16},"generated":{"line":176,"column":12}},{"source":"result.es6","name":"plugin","original":{"line":128,"column":21},"generated":{"line":176,"column":13}},{"source":"result.es6","name":"opts","original":{"line":128,"column":16},"generated":{"line":176,"column":19}},{"source":"result.es6","name":null,"original":{"line":128,"column":30},"generated":{"line":176,"column":22}},{"source":"result.es6","name":"lastPlugin","original":{"line":128,"column":35},"generated":{"line":176,"column":27}},{"source":"result.es6","name":null,"original":{"line":128,"column":30},"generated":{"line":176,"column":37}},{"source":"result.es6","name":"postcssPlugin","original":{"line":128,"column":46},"generated":{"line":176,"column":38}},{"source":"result.es6","name":"opts","original":{"line":128,"column":16},"generated":{"line":176,"column":51}},{"source":"result.es6","name":null,"original":{"line":129,"column":13},"generated":{"line":177,"column":0}},{"source":"result.es6","name":null,"original":{"line":130,"column":9},"generated":{"line":178,"column":0}},{"source":"result.es6","name":null,"original":{"line":132,"column":8},"generated":{"line":180,"column":0}},{"source":"result.es6","name":"warning","original":{"line":132,"column":12},"generated":{"line":180,"column":8}},{"source":"result.es6","name":"warning","original":{"line":132,"column":12},"generated":{"line":180,"column":15}},{"source":"result.es6","name":null,"original":{"line":132,"column":22},"generated":{"line":180,"column":18}},{"source":"result.es6","name":"Warning","original":{"line":132,"column":26},"generated":{"line":180,"column":22}},{"source":"result.es6","name":"Warning","original":{"line":132,"column":26},"generated":{"line":180,"column":31}},{"source":"result.es6","name":"Warning","original":{"line":132,"column":26},"generated":{"line":180,"column":32}},{"source":"result.es6","name":null,"original":{"line":132,"column":22},"generated":{"line":180,"column":39}},{"source":"result.es6","name":"text","original":{"line":132,"column":34},"generated":{"line":180,"column":40}},{"source":"result.es6","name":null,"original":{"line":132,"column":22},"generated":{"line":180,"column":44}},{"source":"result.es6","name":"opts","original":{"line":132,"column":40},"generated":{"line":180,"column":46}},{"source":"result.es6","name":null,"original":{"line":132,"column":22},"generated":{"line":180,"column":50}},{"source":"result.es6","name":null,"original":{"line":132,"column":8},"generated":{"line":180,"column":51}},{"source":"result.es6","name":null,"original":{"line":133,"column":8},"generated":{"line":181,"column":0}},{"source":"result.es6","name":"messages","original":{"line":133,"column":13},"generated":{"line":181,"column":9}},{"source":"result.es6","name":null,"original":{"line":133,"column":8},"generated":{"line":181,"column":17}},{"source":"result.es6","name":"push","original":{"line":133,"column":22},"generated":{"line":181,"column":18}},{"source":"result.es6","name":null,"original":{"line":133,"column":8},"generated":{"line":181,"column":22}},{"source":"result.es6","name":"warning","original":{"line":133,"column":27},"generated":{"line":181,"column":23}},{"source":"result.es6","name":null,"original":{"line":133,"column":8},"generated":{"line":181,"column":30}},{"source":"result.es6","name":null,"original":{"line":135,"column":8},"generated":{"line":182,"column":0}},{"source":"result.es6","name":"warning","original":{"line":135,"column":15},"generated":{"line":182,"column":11}},{"source":"result.es6","name":null,"original":{"line":135,"column":8},"generated":{"line":182,"column":18}},{"source":"result.es6","name":null,"original":{"line":138,"column":4},"generated":{"line":184,"column":0}},{"source":"result.es6","name":"warnings","original":{"line":149,"column":4},"generated":{"line":197,"column":19}},{"source":"result.es6","name":null,"original":{"line":149,"column":15},"generated":{"line":197,"column":50}},{"source":"result.es6","name":null,"original":{"line":150,"column":8},"generated":{"line":198,"column":0}},{"source":"result.es6","name":null,"original":{"line":150,"column":15},"generated":{"line":198,"column":11}},{"source":"result.es6","name":"messages","original":{"line":150,"column":20},"generated":{"line":198,"column":16}},{"source":"result.es6","name":null,"original":{"line":150,"column":15},"generated":{"line":198,"column":24}},{"source":"result.es6","name":"filter","original":{"line":150,"column":29},"generated":{"line":198,"column":25}},{"source":"result.es6","name":null,"original":{"line":150,"column":15},"generated":{"line":198,"column":31}},{"source":"result.es6","name":null,"original":{"line":150,"column":37},"generated":{"line":198,"column":32}},{"source":"result.es6","name":null,"original":{"line":150,"column":37},"generated":{"line":198,"column":42}},{"source":"result.es6","name":null,"original":{"line":150,"column":37},"generated":{"line":198,"column":43}},{"source":"result.es6","name":null,"original":{"line":150,"column":37},"generated":{"line":198,"column":45}},{"source":"result.es6","name":null,"original":{"line":150,"column":37},"generated":{"line":199,"column":0}},{"source":"result.es6","name":"i","original":{"line":150,"column":42},"generated":{"line":199,"column":13}},{"source":"result.es6","name":"i","original":{"line":150,"column":42},"generated":{"line":199,"column":14}},{"source":"result.es6","name":"type","original":{"line":150,"column":44},"generated":{"line":199,"column":15}},{"source":"result.es6","name":"i","original":{"line":150,"column":42},"generated":{"line":199,"column":19}},{"source":"result.es6","name":null,"original":{"line":150,"column":53},"generated":{"line":199,"column":24}},{"source":"result.es6","name":null,"original":{"line":150,"column":37},"generated":{"line":199,"column":33}},{"source":"result.es6","name":null,"original":{"line":150,"column":15},"generated":{"line":200,"column":0}},{"source":"result.es6","name":null,"original":{"line":150,"column":15},"generated":{"line":200,"column":5}},{"source":"result.es6","name":null,"original":{"line":150,"column":8},"generated":{"line":200,"column":6}},{"source":"result.es6","name":null,"original":{"line":153,"column":4},"generated":{"line":202,"column":0}},{"source":"result.es6","name":null,"original":{"line":161,"column":18},"generated":{"line":214,"column":24}},{"source":"result.es6","name":null,"original":{"line":162,"column":8},"generated":{"line":215,"column":0}},{"source":"result.es6","name":null,"original":{"line":162,"column":15},"generated":{"line":215,"column":13}},{"source":"result.es6","name":"css","original":{"line":162,"column":20},"generated":{"line":215,"column":18}},{"source":"result.es6","name":null,"original":{"line":162,"column":8},"generated":{"line":215,"column":21}},{"source":"result.es6","name":null,"original":{"line":163,"column":5},"generated":{"line":216,"column":0}},{"source":"result.es6","name":"Result","original":{"line":167,"column":15},"generated":{"line":222,"column":18}},{"source":"result.es6","name":null,"original":{"line":169,"column":0},"generated":{"line":223,"column":0}}],"sources":{"result.es6":"import Warning from './warning';\n\n/**\n * Provides the result of the PostCSS transformations.\n *\n * A Result instance is returned by {@link LazyResult#then}\n * or {@link Root#toResult} methods.\n *\n * @example\n * postcss([cssnext]).process(css).then(function (result) {\n *    console.log(result.css);\n * });\n *\n * @example\n * var result2 = postcss.parse(css).toResult();\n */\nclass Result {\n\n    /**\n     * @param {Processor} processor - processor used for this transformation.\n     * @param {Root}      root      - Root node after all transformations.\n     * @param {processOptions} opts - options from the {@link Processor#process}\n     *                                or {@link Root#toResult}\n     */\n    constructor(processor, root, opts) {\n        /**\n         * @member {Processor} - The Processor instance used\n         *                       for this transformation.\n         *\n         * @example\n         * for ( let plugin of result.processor.plugins) {\n         *   if ( plugin.postcssPlugin === 'postcss-bad' ) {\n         *     throw 'postcss-good is incompatible with postcss-bad';\n         *   }\n         * });\n         */\n        this.processor = processor;\n        /**\n         * @member {Message[]} - Contains messages from plugins\n         *                       (e.g., warnings or custom messages).\n         *                       Each message should have type\n         *                       and plugin properties.\n         *\n         * @example\n         * postcss.plugin('postcss-min-browser', () => {\n         *   return (root, result) => {\n         *     var browsers = detectMinBrowsersByCanIUse(root);\n         *     result.messages.push({\n         *       type:    'min-browser',\n         *       plugin:  'postcss-min-browser',\n         *       browsers: browsers\n         *     });\n         *   };\n         * });\n         */\n        this.messages = [];\n        /**\n         * @member {Root} - Root node after all transformations.\n         *\n         * @example\n         * root.toResult().root == root;\n         */\n        this.root = root;\n        /**\n         * @member {processOptions} - Options from the {@link Processor#process}\n         *                            or {@link Root#toResult} call\n         *                            that produced this Result instance.\n         *\n         * @example\n         * root.toResult(opts).opts == opts;\n         */\n        this.opts = opts;\n        /**\n         * @member {string} - A CSS string representing of {@link Result#root}.\n         *\n         * @example\n         * postcss.parse('a{}').toResult().css //=> \"a{}\"\n         */\n        this.css = undefined;\n        /**\n         * @member {SourceMapGenerator} - An instance of `SourceMapGenerator`\n         *                                class from the `source-map` library,\n         *                                representing changes\n         *                                to the {@link Result#root} instance.\n         *\n         * @example\n         * result.map.toJSON() //=> { version: 3, file: 'a.css', â€¦ }\n         *\n         * @example\n         * if ( result.map ) {\n         *   fs.writeFileSync(result.opts.to + '.map', result.map.toString());\n         * }\n         */\n        this.map = undefined;\n    }\n\n    /**\n     * Returns for @{link Result#css} content.\n     *\n     * @example\n     * result + '' === result.css\n     *\n     * @return {string} string representing of {@link Result#root}\n     */\n    toString() {\n        return this.css;\n    }\n\n    /**\n     * Creates an instance of {@link Warning} and adds it\n     * to {@link Result#messages}.\n     *\n     * @param {string} text        - warning message\n     * @param {Object} [opts]      - warning options\n     * @param {Node}   opts.node   - CSS node that caused the warning\n     * @param {string} opts.word   - word in CSS source that caused the warning\n     * @param {number} opts.index  - index in CSS node string that caused\n     *                               the warning\n     * @param {string} opts.plugin - name of the plugin that created\n     *                               this warning. {@link Result#warn} fills\n     *                               this property automatically.\n     *\n     * @return {Warning} created warning\n     */\n    warn(text, opts = { }) {\n        if ( !opts.plugin ) {\n            if ( this.lastPlugin && this.lastPlugin.postcssPlugin ) {\n                opts.plugin = this.lastPlugin.postcssPlugin;\n            }\n        }\n\n        let warning = new Warning(text, opts);\n        this.messages.push(warning);\n\n        return warning;\n    }\n\n    /**\n     * Returns warnings from plugins. Filters {@link Warning} instances\n     * from {@link Result#messages}.\n     *\n     * @example\n     * result.warnings().forEach(warn => {\n     *   console.warn(warn.toString());\n     * });\n     *\n     * @return {Warning[]} warnings from plugins\n     */\n    warnings() {\n        return this.messages.filter( i => i.type === 'warning' );\n    }\n\n    /**\n     * An alias for the {@link Result#css} property.\n     * Use it with syntaxes that generate non-CSS output.\n     * @type {string}\n     *\n     * @example\n     * result.css === result.content;\n     */\n    get content() {\n        return this.css;\n    }\n\n}\n\nexport default Result;\n\n/**\n * @typedef  {object} Message\n * @property {string} type   - message type\n * @property {string} plugin - source PostCSS plugin name\n */\n"},"lineCount":null}},"error":null,"hash":"46ea73a1acdfce3830edcb267d659d0c","cacheData":{"env":{}}}